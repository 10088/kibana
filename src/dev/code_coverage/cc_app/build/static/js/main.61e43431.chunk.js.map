{"version":3,"sources":["logo_kibana_32_color.svg","header.jsx","test_runner_item.jsx","test_runner_item_list.jsx","historical_item.jsx","historical_list.jsx","app.js","service_worker.js","utils/pretty.js","utils/either.js","index.js"],"names":["module","exports","Header","url","className","href","target","rel","src","logo","alt","style","height","width","TestRunnerItem","historicalItem","type","testRunnerItem","typeHref","postfix","exec","jobNum","timestamp","TestRunnerItemList","testRunnerTypes","renderWithHistorical","key","id","renderItem","map","HistoricalItem","item","currentJobNumber","x","replace","join","title","anchor","i","HistoricalList","historicalItems","renderWithRunners","reverse","App","buildStats","Boolean","window","location","hostname","match","Right","chain","f","fold","g","inspect","of","Left","tryCatch","e","rootEl","document","getElementById","bind","initialData","tc","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.61e43431.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_kibana_32_color.752a9559.svg\";","import React from \"react\";\nimport logo from './logo_kibana_32_color.svg'\n\nexport default function Header({ url }) {\n  return (\n    <header className=\"App-header\">\n      <a\n        className=\"App-link\"\n        href={url}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <img\n          src={logo}\n          className=\"App-logo\"\n          alt=\"logo\"\n          style={{ height: 20, width: 20}}\n        />\n\n        Build Stats\n      </a>\n    </header>\n  );\n}\n","import React from \"react\";\n\nexport default function TestRunnerItem ({historicalItem, testRunnerItem}) {\n  const { type } = testRunnerItem;\n  const typeHref = href(type);\n\n  return (\n    <div>\n      <div>\n        {type}\n      </div>\n      <a\n        className=\"App-link\"\n        href={typeHref(historicalItem)}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        {timestamp(historicalItem)}\n      </a>\n    </div>\n  );\n}\n\nfunction timestamp(historicalItem) {\n  return [.../coverage\\/\\d*\\/(\\d*-.*Z)/gm.exec(historicalItem)][1];\n}\n\nfunction href(type) {\n  const prefix = 'https://storage.cloud.google.com/kibana-ci-artifacts/jobs/elastic%2Bkibana%2Bcode-coverage';\n  const postfix = `target/kibana-coverage/${type}-combined/index.html`;\n  return function hrefInner(historicalItem) {\n    return `${prefix}/${jobNum(historicalItem)}/${timestamp(historicalItem)}/${postfix}`;\n  }\n}\n\nfunction jobNum(historicalItem) {\n  return [.../coverage\\/(\\d*)\\/\\d*-.*Z/gm.exec(historicalItem)][1];\n}\n","import React from \"react\";\nimport TestRunnerItem from './test_runner_item';\n\nexport default function TestRunnerItemList ({historicalItem, testRunnerTypes}) {\n  const renderWithHistorical = renderItem(historicalItem);\n  return (\n    <div className=\"App-TestRunner-List\">\n      <ul>\n        Test Runners\n        {testRunnerTypes.map(renderWithHistorical)}\n      </ul>\n    </div>\n  );\n}\n\nfunction renderItem (historicalItem) {\n  return function renderItemInner (testRunnerItem) {\n    return (\n      <TestRunnerItem\n        historicalItem={historicalItem}\n        testRunnerItem={testRunnerItem}\n        key={testRunnerItem.id}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport TestRunnerItemList from './test_runner_item_list';\n\nexport default function HistoricalItem({item, currentJobNumber, testRunnerTypes}) {\n\n  return (\n    <>\n      <div className=\"max-w-sm rounded overflow-hidden shadow-lg\">\n        {/*<img className=\"w-full\" src=\"/img/card-top.jpg\" alt=\"Sunset in the mountains\"></img>*/}\n          <div className=\"px-6 py-4\">\n            <div className=\"font-bold text-xl mb-2\">\n              {anchor(item)}\n            </div>\n            <div className=\"text-gray-700 text-base\">\n              <TestRunnerItemList historicalItem={item} testRunnerTypes={testRunnerTypes} />\n            </div>\n          </div>\n      </div>\n    </>\n  );\n}\n\nfunction anchor(item) {\n  return (<a\n    className=\"App-link\"\n    href={href(item)}\n    target=\"_blank\"\n    rel=\"noopener noreferrer\"\n  >\n    Job - {title(item)}\n  </a>);\n}\n\nfunction title(item) {\n  const dropPrefix = () => ['gs://kibana-ci-artifacts/jobs/elastic+kibana+code-coverage/', ''];\n  const dropPostfix = () => [/(\\d.*)\\/\\d.*$/, '$1'];\n  return item\n    .replace(...dropPrefix())\n    .replace(...dropPostfix());\n}\n\nfunction href(x) {\n  return ['https://console.cloud.google.com/storage/browser/', x.replace('gs://', '')]\n    .join('');\n}\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from \"react\";\nimport HistoricalItem from './historical_item';\n\nconst renderItem = testRunnerTypes => currentJobNumber => (x, i) => {\n  return (\n      <HistoricalItem\n        item={x}\n        key={i}\n        currentJobNumber={currentJobNumber}\n        testRunnerTypes={testRunnerTypes}\n      />\n);\n};\n\nexport default function HistoricalList({testRunnerTypes, historicalItems, currentJobNumber }) {\n  const renderWithRunners = renderItem(testRunnerTypes);\n  return (\n    <div className=\"font-bold text-xl mb-2\">\n      Historical Items - Compare to Current? [{currentJobNumber}]\n      <ul>\n        {historicalItems.reverse().map((x, i) => renderWithRunners(currentJobNumber)(x, i))}\n      </ul>\n    </div>\n     );\n}\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Header from './header';\nimport HistoricalList from './historical_list';\n// import Footer from './footer';\n\nexport default function App({ testRunnerTypes, buildStats, historicalItems, currentJobNumber}) {\n  const { url } = buildStats;\n  return (\n    <div>\n      <Header url={url} />\n      <div>\n        <HistoricalList\n          testRunnerTypes={testRunnerTypes}\n          historicalItems={historicalItems}\n          currentJobNumber={currentJobNumber}\n        />\n      </div>\n      {/*<Footer />*/}\n    </div>\n  );\n}\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const pretty = x => JSON.stringify(x, null, 2);\n","export const Right = x =>\n  ({\n    chain: f => f(x),\n    map: f => Right(f(x)),\n    fold: (f, g) => g(x),\n    inspect: () => `Right(${x})`\n  });\n\nRight.of = function of(x) {\n  return new Right(x);\n};\n\nexport function right(x) {\n  return Right.of(x);\n}\n\nexport const Left = x =>\n  ({\n    chain: f => Left(x),\n    map: f => Left(x),\n    fold: (f, g) => f(x),\n    inspect: () => `Left(${x})`\n  });\n\nLeft.of = function of(x) {\n  return new Left(x);\n};\n\nexport function left(x) {\n  return Left.of(x);\n}\n\nexport const fromNullable = x =>\n  (\n    x !== null &&\n    x !== undefined &&\n    x !== false &&\n    x !== 'undefined'\n  )\n    ? Right(x)\n    : Left(null);\n\nexport const tryCatch = f => {\n  try {\n    return Right(f());\n  } catch (e) {\n    return Left(e);\n  }\n};\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport * as serviceWorker from './service_worker';\nimport { pretty as p } from './utils/pretty';\nimport { tryCatch as tc } from './utils/either';\nimport './styles/tailwind.css';\n\nconst rootEl = document.getElementById.bind(document, 'root');\nconst initialData = window.initialData;\nconst tryInit = () => tc(() => initialData);\nconst tryOneProp = () => tc(() => initialData.testRunnerTypes);\n\ntryInit()\n  .chain(tryOneProp)\n  .map(boot);\n\nfunction boot(testRunnerTypes) {\n  const { buildStats, historicalItems, currentJobNumber } = initialData;\n  initPrint(initialData);\n  ReactDOM.render(\n    <App\n      testRunnerTypes={testRunnerTypes}\n      buildStats={buildStats}\n      historicalItems={historicalItems}\n      currentJobNumber={currentJobNumber}\n    />,\n    rootEl(),\n  );\n}\n\nfunction initPrint(x) {\n  // console.log(`\\n### initial data: \\n\\n${p(x)}`);\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}