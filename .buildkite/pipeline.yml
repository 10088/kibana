steps:
  - command: .buildkite/setup/pre_build.sh
    label: Pre-Build
  - wait
  - command: .buildkite/scripts/jobs/build.sh
    label: Build Kibana Distribution
    agents:
      queue: bootstrap
    key: build
  - command: .buildkite/scripts/jobs/build_oss.sh
    label: Build OSS Kibana Distribution
    agents:
      queue: bootstrap
    key: build-oss
  - command: .buildkite/scripts/xpack-cigroup.sh
    label: 'Default CI Group %n'
    parallelism: 31
    agents:
      queue: ci-group-6
    artifact_paths: target/junit/**/*.xml
    depends_on: build

  - command: .buildkite/scripts/oss-cigroup.sh
    label: 'OSS CI Group %n'
    parallelism: 12
    agents:
      queue: ci-group-4d
    artifact_paths: target/junit/**/*.xml
    depends_on: build-oss

  - command: .buildkite/scripts/oss-firefox.sh
    label: 'OSS Firefox Tests'
    agents:
      queue: ci-group-4d
    artifact_paths: target/junit/**/*.xml
    depends_on: build-oss

  - command: .buildkite/scripts/oss-accessibility.sh
    label: 'OSS Accessibility Tests'
    agents:
      queue: ci-group-4d
    artifact_paths: target/junit/**/*.xml
    depends_on: build-oss

  - command: .buildkite/scripts/plugin_functional.sh
    label: 'Plugin and Interpreter Functional Tests'
    agents:
      queue: ci-group-4d
    artifact_paths: target/junit/**/*.xml
    depends_on: build-oss

  - command: .buildkite/scripts/xpack-firefox.sh
    label: 'Default Firefox Smoke Tests'
    agents:
      queue: ci-group-4d
    artifact_paths: target/junit/**/*.xml
    depends_on: build

  - command: .buildkite/scripts/xpack-accessibility.sh
    label: 'Default Accessibility Tests'
    agents:
      queue: ci-group-4d
    artifact_paths: target/junit/**/*.xml
    depends_on: build

  - command: .buildkite/scripts/test/jest.sh
    label: 'Jest Tests'
    agents:
      queue: bootstrap
    artifact_paths: target/junit/**/*.xml

  - command: .buildkite/scripts/test/jest_integration.sh
    label: 'Jest Integration Tests'
    agents:
      queue: jest
    artifact_paths: target/junit/**/*.xml

  - command: .buildkite/scripts/test/api_integration.sh
    label: 'API Integration Tests'
    agents:
      queue: jest
    artifact_paths: target/junit/**/*.xml

  - command: .buildkite/scripts/lint.sh
    label: 'Lint'
    agents:
      queue: jest

  - command: .buildkite/scripts/checks.sh
    label: 'Checks'
    agents:
      queue: jest

  - wait: ~
    continue_on_failure: true
  - plugins:
      - junit-annotate#v1.9.0:
          artifacts: target/junit/**/*.xml
  - wait: ~
    continue_on_failure: true
  - command: .buildkite/setup/post_build.sh
    label: Post-Build
